import asyncio
import requests
from pystyle import *

import aiohttp

KRAKEN = Write.Input("KrakenFiles Link > ", Colors.blue, interval=0)

print(" ")

AMOUNT = Write.Input("Views Amount > ", Colors.blue, interval=0)


async def fetch(s, url):
    views_sent = 0
    async with s.get(f"{KRAKEN}") as r:
        if r.status != 200:
            r.raise_for_status()
        else:
            views_sent = views_sent + 1
            Write.Print(f"{views_sent} View Sent! \n", Colors.green, interval=0)
        return await r.text()


async def fetch_all(s, urls):
    tasks = []
    for url in urls:
        task = asyncio.create_task(fetch(s, url))
        tasks.append(task)
    res = await asyncio.gather(*tasks)
    return res


async def main():
    urls = range(1, int(AMOUNT))
    async with aiohttp.ClientSession() as session:
        htmls = await fetch_all(session, urls)
        print(htmls)


if __name__ == '__main__':
    asyncio.run(main())
